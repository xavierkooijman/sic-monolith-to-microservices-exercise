{
  "swagger": "2.0",
  "info": {
    "title": "My API",
    "description": "Swagger documentation",
    "version": "1.0.0"
  },
  "host": "localhost:5000",
  "basePath": "/",
  "tags": [
    {
      "name": "Users",
      "description": "Users related endpoints"
    }
  ],
  "schemes": [
    "http"
  ],
  "paths": {
    "/users/": {
      "get": {
        "tags": [
          "Users"
        ],
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Get users objects",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetUsers"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Users fetched successfully",
            "schema": {
              "$ref": "#/definitions/GetUsers"
            }
          }
        }
      },
      "post": {
        "tags": [
          "Users"
        ],
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "New user object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateUser"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "User created successfully",
            "schema": {
              "$ref": "#/definitions/GetUser"
            }
          },
          "409": {
            "description": "Email already exists"
          }
        }
      }
    },
    "/users/{id}": {
      "get": {
        "tags": [
          "Users"
        ],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Get user object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/GetUser"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User fetched successfully",
            "schema": {
              "$ref": "#/definitions/GetUser"
            }
          },
          "404": {
            "description": "User not found"
          }
        }
      },
      "put": {
        "tags": [
          "Users"
        ],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Update user object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateUser"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User updated successfully",
            "schema": {
              "$ref": "#/definitions/UpdateUser"
            }
          },
          "404": {
            "description": "User not found"
          }
        }
      },
      "delete": {
        "tags": [
          "Users"
        ],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Delete user object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeleteUser"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User deleted successfully",
            "schema": {
              "$ref": "#/definitions/DeleteUser"
            }
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    }
  },
  "definitions": {
    "GetUser": {
      "type": "object",
      "properties": {
        "id": {
          "type": "number",
          "example": 1
        },
        "name": {
          "type": "string",
          "example": "Example Name"
        },
        "email": {
          "type": "string",
          "example": "exampleEmail"
        }
      }
    },
    "GetUsers": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "example": 1
          },
          "name": {
            "type": "string",
            "example": "Example Name"
          },
          "email": {
            "type": "string",
            "example": "exampleEmail"
          }
        }
      }
    },
    "CreateUser": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "Example Name"
        },
        "email": {
          "type": "string",
          "example": "exampleEmail"
        }
      }
    },
    "UpdateUser": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "Updated Name"
        },
        "email": {
          "type": "string",
          "example": "exampleEmail"
        }
      }
    },
    "DeleteUser": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string",
          "example": "User deleted successfully"
        }
      }
    }
  }
}